#!/bin/bash
# 98-update-filesystems
#
# optimice filesystem access
#

info " Update and optimize filesystems "

# hacer una copia de seguridad del fstab
if [ ! -f "/etc/fstab.orig" ]; then
	cp -p /etc/fstab /etc/fstab.orig
fi

# optimize all filesystem flags
awk -v f="$EXT4_FLAGS" '/ext4/{$4=f}{print}' /etc/fstab > /etc/fstab.bak
cp -p /etc/fstab.bak /etc/fstab

awk -v f="$XFS_FLAGS" '/xfs/{$4=f}{print}' /etc/fstab > /etc/fstab.bak
cp -p /etc/fstab.bak /etc/fstab

awk -v f="$EXT4_FLAGS,$ROOT_FLAGS" '/\/ /{$4=f}{print}' /etc/fstab > /etc/fstab.bak
cp -p /etc/fstab.bak /etc/fstab

# umount and optimice boot
BOOT=$(cat /etc/mtab | grep "/boot " | awk '{print $1}')
if [ ! -z "$BOOT" ]; then
# check BOOT
umount $BOOT
e2fsck -f $BOOT
# convert to ext4
tune2fs -O extents,uninit_bg,dir_index $BOOT
# disable journal
tune2fs -O ^has_journal $BOOT
# cambiar el fstab a ext4
sed -i -e "/\/boot/ s/ext3/ext4/;/\// s/ext3/ext4/;s/ext2/ext4/" /etc/fstab
# change boot filesystem flags
awk -v f="$EXT4_FLAGS,$BOOT_FLAGS" '/\/boot/{$4=f}{print}' /etc/fstab > /etc/fstab.bak
cp -p /etc/fstab.bak /etc/fstab
e2fsck -fDC0 $BOOT
fi

# check HOME
HOME=$(cat /etc/mtab | grep "/home " | awk '{print $1}')
fshome=$(cat /etc/mtab | grep "/home " | awk '{print $3}')
if [ ! -z "$BOOT" ]; then
umount $HOME
if [ "$fshome" == 'ext4' ]; then
e2fsck -f $HOME
# convert to ext4
tune2fs -O extents,uninit_bg,dir_index $HOME
# cambiar el fstab a ext4 (de estar en ext3)
sed -i -e "/\/home/ s/ext3/ext4/;/\// s/ext3/ext4/;s/ext2/ext4/" /etc/fstab
# change filesystem flags
awk -v f="$EXT4_FLAGS,$BOOT_FLAGS" '/\/home/{$4=f}{print}' /etc/fstab > /etc/fstab.bak
cp -p /etc/fstab.bak /etc/fstab
e2fsck -fDC0 $HOME
else
awk -v f="$XFS_FLAGS" '/\/home/{$4=f}{print}' /etc/fstab > /etc/fstab.bak
cp -p /etc/fstab.bak /etc/fstab
fi
fi

# remount filesystem
mount -a
