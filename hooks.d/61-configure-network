#!/bin/bash -e
# 10-configure-network
#
# configure network options for Debian Servers and workstations (bridge, openvswitch, etc)
#
# Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo los
# términos de la Licencia Pública General de GNU (versión 3).

info " Create Network Configuration "

# backup interfaces
if [ ! -f "/etc/network/interfaces.orig" ]; then
	cp /etc/network/interfaces /etc/network/interfaces.orig
fi
# backup resolv.conf
if [ ! -f "/etc/resolv.conf.orig" ]; then
	cp /etc/resolv.conf /etc/resolv.conf.orig
fi

install_package bridge-utils iftop
if [ -z $(which ovs-vsctl) ]; then
    install_package openvswitch-switch
    kernel=$(uname -r)
    # only install if kernel < 3.5.0 (using coreutils sort -V)
    version=$(printf "3.5.0\n${kernel}\n" | sort -Vr | head -n1)
    if [ "$version" != "$kernel" ]; then
	# configure openvswitch module (TODO: kernel < 3.5)
	install_package openvswitch-datapath-dkms
	service openvswitch-switch restart
    fi
fi
# restart openvswitch
service openvswitch-switch restart

# get interfaces
interfaces=$(ip addr | grep mtu | awk '{print $2}'| cut -d ':' -f1)
firstiface=$(ip addr | grep mtu | awk '{print $2}'| grep -v "lo:" | cut -d ':' -f1 | head -n1)

# add bridge internal configuration
cat <<EOF > /etc/network/interfaces

# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

#### 
### Internal Bridge for containers
########
auto loc0
iface loc0 inet static
    address 172.16.30.1
    network 172.16.30.0
    netmask 255.255.255.0
    broadcast  172.16.30.255
    dns-nameservers 127.0.0.1
    # bridge info
    bridge-ports none
    bridge_bridgeprio 1
    bridge-ageing 100
    bridge-maxwait 1
    bridge-stp on

#######
EOF
# first bridge (lan bridge)
if [ -n "$firstiface" ]; then

netmask=$(get_netmask $firstiface)
ip=$(get_ip $firstiface)
network=$(get_network $ip $netmask)

if [ "$USE_DHCP" == "yes" ]; then
lanbridge=$(cat << _MSG
iface lan0 inet dhcp
_MSG
)
else
lanbridge=$(cat << _MSG
iface lan0 inet static
    address $ip
    network $network
    netmask $netmask
_MSG
)
fi

cat <<EOF >> /etc/network/interfaces

auto $firstiface
allow-hotplug $firstiface
iface $firstiface inet manual

auto lan0
$lanbridge
    dns-nameservers 127.0.0.1
    # bridge info
    bridge-ports $firstiface
    bridge_bridgeprio 1
    bridge-ageing 100
    bridge-maxwait 1
    bridge-stp off
    # net
    pre-up /sbin/pre-$firstiface.sh
    up /sbin/$firstiface.sh    
EOF

cat <<EOF > /sbin/pre-$firstiface.sh
#!/bin/bash
/sbin/ethtool -K $firstiface tso off gro off
/sbin/ifconfig $firstiface txqueuelen 5000
EOF

cat <<EOF > /sbin/$firstiface.sh
#!/bin/bash
defrt=\`ip route | grep "^default" | head -1\`
ip route change \$defrt initcwnd 10
EOF

chmod 0700 /sbin/pre-$firstiface.sh
chmod 0700 /sbin/$firstiface.sh

fi
